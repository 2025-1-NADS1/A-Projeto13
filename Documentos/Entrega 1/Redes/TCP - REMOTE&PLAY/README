# Servidor TCP - Leitura de Sensores via CSV

## Vis√£o Geral
Este projeto implementa um servidor TCP que recebe comandos de clientes para consultar sensores em ambientes inteligentes. Os dados dos sensores s√£o lidos a partir de um arquivo CSV. A aplica√ß√£o escuta conex√µes, interpreta comandos do cliente e retorna informa√ß√µes sobre sensores.

---

## Implementa√ß√£o do Servidor

### Inicializa√ß√£o do Servidor
- **Endere√ßo IP:** `127.0.0.1` (localhost)  
- **Porta:** `80`
- Inicia um `TcpListener` e aguarda conex√µes de clientes em uma nova thread.

### Processamento de Mensagens
- Aceita conex√µes TCP.
- Aguarda e l√™ uma mensagem do cliente.
- Interpreta comandos usando a estrutura:

  ```
  GET AMBIENTE <nome_do_ambiente>
  ```

- Retorna os sensores daquele ambiente, com seus respectivos status (`Ativo` / `Inativo`).

### Leitura de Dados CSV
- L√™ o arquivo `ambiente-sensores.csv`.
- Espera colunas com os seguintes nomes:
  - `Ambiente`
  - `Sensor`
  - `status`
- O arquivo usa `;` como delimitador.

---

## Detalhes T√©cnicos
- **Linguagem:** C#
- **Comunica√ß√£o de rede:** `TcpListener` e `TcpClient`
- **Leitura/escrita de dados:** `NetworkStream`
- **Codifica√ß√£o:** UTF8
- **Leitura de CSV:** Biblioteca `CsvHelper`
- **Multithreading** para m√∫ltiplas conex√µes simult√¢neas

### Classes principais:
- `IntelligentHouse`: representa um sensor.
- `LeituraCSV`: l√™ e mapeia os dados do CSV.

---

## Tratamento de Erros
- Valida√ß√£o b√°sica dos comandos recebidos.
- Ignora mensagens mal formatadas.
- Implementa espera com timeout para mensagens n√£o recebidas (m√°x. 10 tentativas com 50ms de delay).
- Tratamento de falhas na leitura do CSV:
  - Ignora headers faltando ou campos n√£o encontrados.
- Verifica√ß√£o se o ambiente solicitado realmente existe.

---

## Como Usar
1. Certifique-se de que o arquivo `ambiente-sensores.csv` est√° no mesmo diret√≥rio do execut√°vel e possui o formato correto.
2. Compile e execute a aplica√ß√£o servidor.
3. Um cliente pode se conectar via TCP e enviar comandos no seguinte formato:

   ```
   GET AMBIENTE Sala
   ```

4. O servidor responder√° com a lista de sensores no ambiente especificado.

---

## Depend√™ncias
- .NET Framework / .NET Core  
- `System.Net.Sockets`  
- `System.Text`  
- `System.IO`  
- `System.Threading`  
- [`CsvHelper`](https://joshclose.github.io/CsvHelper/) (pacote NuGet)

---

## Teste Cliente

```text
ESCOLHA O N√öMERO DO AMBIENTE
1 - Quarto 1
2 - Quarto 2
3 - Sala
4 - Cozinha
5 - Piscina
5

Resposta recebida:
Sensores no ambiente 'PISCINA':
- Sensor: BOMBA, Status: Ativo
- Sensor: AQUECEDOR, Status: Inativo
```

---

## Teste Servidor

```text
Servidor iniciado...
Conex√£o recebida de 127.0.0.1:61140
Comando recebido: GET AMBIENTE PISCINA
```

---

## Link para o Projeto
üîó [Reposit√≥rio GitHub](https://github.com/2025-1-NADS1/A-Projeto13/tree/e2d88adc09fd03197c34b8a649b91313a23e9dab/src/Redes/TCP%20-%20REMOTE%26PLAY)

